#######
##
## Media Server 2018 Guide by NoobTaco
## version: 0.1.0
##
#######

version: '2'

services:
  ghost:
    image: ghost:1-alpine
    container_name: ghost
    restart: always
    ports: 
      - 8085:2368
    volumes:
      - ${CONFIG_DIR}/ghost:/var/lib/ghost/content
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
#      - VIRTUAL_HOST=blog.SOMEPLACE.COM
#      - VIRTUAL_NETWORK=nginx-proxy
#      - VIRTUAL_PORT=2368
#      - LETSENCRYPT_HOST=blog.SOMEPLACE.COM
#      - LETSENCRYPT_EMAIL=something@someplace.com

  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    volumes:
      - ${CONFIG_DIR}/sabnzbd:/config
      - ${MEDIA}/downloads:/downloads
      - ${MEDIA}/downloads/incomplete-downloads:/downloads/incomplete-downloads
    ports:
      - 8080:8080
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

  hydra:
    image: linuxserver/hydra
    container_name: hydra
    volumes:
      - ${CONFIG_DIR}/hydra:/config
      - ${MEDIA}/downloads:/downloads
    ports:
      - 5075:5075
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    depends_on:
      - sabnzbd
    volumes:
      - ${CONFIG_DIR}/sonarr:/config
      - ${MEDIA}/tv:/tv
      - ${MEDIA}/downloads:/downloads
    ports:
      - 8989:8989
    links:
      - sabnzbd
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
#      - VIRTUAL_HOST=sonarr.SOMEPLACE.COM
#      - VIRTUAL_NETWORK=nginx-proxy
#      - VIRTUAL_PORT=8989
#      - LETSENCRYPT_HOST=sonarr.SOMEPLACE.COM
#      - LETSENCRYPT_EMAIL=something@someplace.com

  mylar:
    image: linuxserver/mylar
    container_name: mylar
    depends_on:
      - sabnzbd
    volumes:
      - ${CONFIG_DIR}/mylar:/config
      - ${MEDIA}/downloads/comics:/downloads
      - ${MEDIA}/comics:/comics
    ports:
      - 8090:8090
    links:
      - sabnzbd
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

  plex:
    image: plexinc/pms-docker
    container_name: plex
    volumes:
     - ${CONFIG_DIR}/plex/config:/config
     - ${MEDIA}:/media:ro
     - ${CONFIG_DIR}/plex/deb:/deb
     - ${CONFIG_DIR}/plex/transcode:/transcode
    environment:
     - PUID=${PUID}
     - PGID=${PGID}
     - TZ=${TZ}
    network_mode: host
    devices:
     - /dev/dri:/dev/dri
    privileged: true
    restart:
      always
  
  plexpy:
    image: linuxserver/plexpy
    container_name: plexpy
    depends_on:
      - plex
    volumes:
      - ${CONFIG_DIR}/plexpy:/config
      - ${CONFIG_DIR}/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro
    ports:
      - 8181:8181
    links:
      - plex
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
#      - VIRTUAL_HOST=plexpy.SOMEPLACE.COM
#      - VIRTUAL_NETWORK=nginx-proxy
#      - VIRTUAL_PORT=8181
#      - LETSENCRYPT_HOST=plexpy.SOMEPLACE.COM
#      - LETSENCRYPT_EMAIL=something@someplace.com
  
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    depends_on:
      - plex
    volumes:
      - ${CONFIG_DIR}/ombi:/config
    ports:
      - 3579:3579
    links:
      - plex
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
#      - VIRTUAL_HOST=add.SOMEPLACE.COM
#      - VIRTUAL_NETWORK=nginx-proxy
#      - VIRTUAL_PORT=3579
#      - LETSENCRYPT_HOST=add.SOMEPLACE.COM
#      - LETSENCRYPT_EMAIL=something@someplace.com

  muximux:
    image: linuxserver/muximux
    container_name: muximux
    volumes:
      - ${CONFIG_DIR}/muximux:/config
    ports:
      - 7777:80
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

  influxdb:
    image: tutum/influxdb
    container_name: influxdb
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - 8083:8083
      - 8086:8086
    volumes:
      - ${CONFIG_DIR}/influxdb:/data

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on: 
      - influxdb
    links:
      - influxdb
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ${CONFIG_DIR}/grafana:/var/lib/grafana
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
 #     - VIRTUAL_HOST=grafana.SOMEPLACE.COM
 #     - VIRTUAL_NETWORK=nginx-proxy
 #     - VIRTUAL_PORT=3000
 #     - LETSENCRYPT_HOST=grafana.SOMEPLACE.COM
 #     - LETSENCRYPT_EMAIL=something@someplace.com

  portainer:
    image: portainer/portainer
    container_name: portainer
    ports:
      - 9000:9000
    volumes:
      - ${CONFIG_DIR}/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart:
      always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

########################
###
###  SSL Proxy containers. Uncoment these containers to use
###
########################

  # nginx:
  #     restart: always
  #     image: nginx
  #     container_name: nginx
  #     ports:
  #       - "80:80"
  #       - "443:443"
  #     volumes:
  #       - "/etc/nginx/conf.d"
  #       - "/etc/nginx/vhost.d"
  #       - "/usr/share/nginx/html"
  #       - "${CONFIG_DIR}/proxy/certs:/etc/nginx/certs:ro"
  
  # nginx-gen:
  #     restart: always
  #     image: jwilder/docker-gen
  #     container_name: nginx-gen
  #     volumes:
  #       - "/var/run/docker.sock:/tmp/docker.sock:ro"
  #       - "${CONFIG_DIR}/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
  #     volumes_from:
  #       - nginx
  #     entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  # letsencrypt-nginx-proxy-companion:
  #     restart: always
  #     image: jrcs/letsencrypt-nginx-proxy-companion
  #     container_name: letsencrypt-nginx-proxy-companion
  #     volumes_from:
  #       - nginx
  #     volumes:
  #       - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #       - "${CONFIG_DIR}/proxy/certs:/etc/nginx/certs:rw"
  #     environment:
  #       - NGINX_DOCKER_GEN_CONTAINER=nginx-gen